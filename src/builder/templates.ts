import type { ListNodesFull } from '../current-instance';

const contentHeader = `
// generated by @keload/node-red-dev-xp
// do not modify this file
// do not commit this file
`;

export async function getControllerIndexContent(nodes: ListNodesFull) {
  return `
${contentHeader}
import type { NodeAPI } from 'node-red';
${nodes.map((node) => `import ${node.pascalName} from '${node.fullControllerPath}';`).join('\n')}


export default async (RED: NodeAPI): Promise<void> => {
    global.RED = RED;

    ${nodes.map((node) => `// @ts-ignore\nglobal.RED.nodes.registerType('${node.name}', ${node.pascalName});`).join('\n')}
};
`.trim();
}

export async function getEditorIndexContent(nodes: ListNodesFull) {
  return `
${contentHeader}
import type { NodeAPI } from 'node-red';
${nodes.map((node) => `import ${node.pascalName} from '${node.editor.tsPath}';`).join('\n')}

declare const RED: NodeAPI;

${nodes.map((node) => `// @ts-ignore\nwindow.RED.nodes.registerType('${node.name}', ${node.pascalName});`).join('\n')}
`.trim();
}
